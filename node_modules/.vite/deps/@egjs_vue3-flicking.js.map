{
  "version": 3,
  "sources": ["../../@egjs/list-differ/src/PolyMap.ts", "../../@egjs/list-differ/src/HashMap.ts", "../../@egjs/list-differ/src/consts.ts", "../../@egjs/list-differ/src/Link.ts", "../../@egjs/list-differ/src/Result.ts", "../../@egjs/list-differ/src/utils.ts", "../../@egjs/list-differ/src/ListDiffer.ts", "../../@egjs/list-differ/src/index.ts", "../../@egjs/vue3-flicking/src/FlickingProps.ts", "../../@egjs/vue3-flicking/src/VueRenderer.ts", "../../@egjs/vue3-flicking/src/VuePanel.ts", "../../@egjs/vue3-flicking/src/VueElementProvider.ts", "../../@egjs/vue3-flicking/src/Flicking.ts"],
  "sourcesContent": ["/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class PolyMap<T> {\n  private keys: T[] = [];\n  private values: number[] = [];\n  public get(key: T): number {\n    return this.values[this.keys.indexOf(key)];\n  }\n  public set(key: T, value: number) {\n    const keys = this.keys;\n    const values = this.values;\n    const prevIndex = keys.indexOf(key);\n    const index = prevIndex === -1 ? keys.length : prevIndex;\n\n    keys[index] = key;\n    values[index] = value;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class HashMap<T> {\n  private object = {};\n  public get(key: number | string): T {\n    return this.object[key];\n  }\n  public set(key: number | string, value: T) {\n    this.object[key] = value;\n  }\n};\n\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport const SUPPORT_MAP = typeof Map === \"function\";\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class Link {\n  prev?: Link;\n  next?: Link;\n\n  public connect(prevLink?: Link, nextLink?: Link) {\n    this.prev = prevLink;\n    this.next = nextLink;\n\n    prevLink && (prevLink.next = this);\n    nextLink && (nextLink.prev = this);\n  }\n  public disconnect() {\n    // In double linked list, diconnect the interconnected relationship.\n    const prevLink = this.prev;\n    const nextLink = this.next;\n    prevLink && (prevLink.next = nextLink);\n    nextLink && (nextLink.prev = prevLink);\n  }\n  public getIndex() {\n    let link: Link | undefined = this;\n    let index = -1;\n\n    while (link) {\n      link = link.prev;\n      ++index;\n    }\n    return index;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport Link from \"./Link\";\n\nfunction orderChanged(changed: number[][], fixed: boolean[]) {\n  // It is roughly in the order of these examples.\n  // 4, 6, 0, 2, 1, 3, 5, 7\n  const fromLinks: Link[] = [];\n  // 0, 1, 2, 3, 4, 5, 6, 7\n  const toLinks: Link[] = [];\n\n  changed.forEach(([from, to]) => {\n    const link = new Link();\n\n    fromLinks[from] = link;\n    toLinks[to] = link;\n  });\n  // `fromLinks` are connected to each other by double linked list.\n  fromLinks.forEach((link, i) => {\n    link.connect(fromLinks[i - 1]);\n  });\n\n  return changed.filter((_, i) => !fixed[i]).map(([from, to], i) => {\n    if (from === to) {\n      return [0, 0];\n    }\n    const fromLink = fromLinks[from];\n    const toLink = toLinks[to - 1];\n    const fromIndex = fromLink.getIndex();\n\n    // Disconnect the link connected to `fromLink`.\n    fromLink.disconnect();\n\n    // Connect `fromLink` to the right of `toLink`.\n    if (!toLink) {\n      fromLink.connect(undefined, fromLinks[0]);\n    } else {\n      fromLink.connect(toLink, toLink.next);\n    }\n    const toIndex = fromLink.getIndex();\n    return [fromIndex, toIndex];\n  });\n}\n\nexport default class Result<T = any> {\n  public prevList: T[];\n  public list: T[];\n  public added: number[];\n  public removed: number[];\n  public changed: number[][];\n  public maintained: number[][];\n  private changedBeforeAdded: number[][];\n  private fixed: boolean[];\n\n  private cacheOrdered: number[][];\n  private cachePureChanged: number[][];\n  constructor(\n    prevList: T[],\n    list: T[],\n    added: number[],\n    removed: number[],\n    changed: number[][],\n    maintained: number[][],\n    changedBeforeAdded: number[][],\n    fixed: boolean[],\n  ) {\n    this.prevList = prevList;\n    this.list = list;\n    this.added = added;\n    this.removed = removed;\n    this.changed = changed;\n    this.maintained = maintained;\n    this.changedBeforeAdded = changedBeforeAdded;\n    this.fixed = fixed;\n  }\n  get ordered(): number[][] {\n    if (!this.cacheOrdered) {\n      this.caculateOrdered();\n    }\n    return this.cacheOrdered;\n  }\n  get pureChanged(): number[][] {\n    if (!this.cachePureChanged) {\n      this.caculateOrdered();\n    }\n    return this.cachePureChanged;\n  }\n  private caculateOrdered() {\n    const ordered = orderChanged(this.changedBeforeAdded, this.fixed);\n    const changed: number[][] = this.changed;\n    const pureChanged: number[][] = [];\n\n    this.cacheOrdered = ordered.filter(([from, to], i) => {\n      const [fromBefore, toBefore] = changed[i];\n\n      if (from !== to) {\n        pureChanged.push([fromBefore, toBefore]);\n        return true;\n      }\n    });\n    this.cachePureChanged = pureChanged;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport { MapInteface, DiffResult } from \"./types\";\nimport PolyMap from \"./PolyMap\";\nimport HashMap from \"./HashMap\";\nimport { SUPPORT_MAP } from \"./consts\";\nimport Result from \"./Result\";\n\n/**\n *\n * @memberof eg.ListDiffer\n * @static\n * @function\n * @param - Previous List <ko> 이전 목록 </ko>\n * @param - List to Update <ko> 업데이트 할 목록 </ko>\n * @param - This callback function returns the key of the item. <ko> 아이템의 키를 반환하는 콜백 함수입니다.</ko>\n * @return - Returns the diff between `prevList` and `list` <ko> `prevList`와 `list`의 다른 점을 반환한다.</ko>\n * @example\n * import { diff } from \"@egjs/list-differ\";\n * // script => eg.ListDiffer.diff\n * const result = diff([0, 1, 2, 3, 4, 5], [7, 8, 0, 4, 3, 6, 2, 1], e => e);\n * // List before update\n * // [1, 2, 3, 4, 5]\n * console.log(result.prevList);\n * // Updated list\n * // [4, 3, 6, 2, 1]\n * console.log(result.list);\n * // Index array of values added to `list`\n * // [0, 1, 5]\n * console.log(result.added);\n * // Index array of values removed in `prevList`\n * // [5]\n * console.log(result.removed);\n * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`\n * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n * console.log(result.changed);\n * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n * // [[4, 3], [3, 4], [2, 6]]\n * console.log(result.pureChanged);\n * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n * // [[4, 1], [4, 2], [4, 3]]\n * console.log(result.ordered);\n * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved\n * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n * console.log(result.maintained);\n */\nexport function diff<T>(\n  prevList: T[],\n  list: T[],\n  findKeyCallback?: (e: T, i: number, arr: T[]) => any\n): DiffResult<T> {\n  const mapClass: new () => MapInteface<any, number> = SUPPORT_MAP ? Map : (findKeyCallback ? HashMap : PolyMap);\n  const callback = findKeyCallback || ((e: T) => e);\n  const added: number[] = [];\n  const removed: number[] = [];\n  const maintained: number[][] = [];\n  const prevKeys = prevList.map(callback);\n  const keys = list.map(callback);\n  const prevKeyMap: MapInteface<any, number> = new mapClass();\n  const keyMap: MapInteface<any, number> = new mapClass();\n  const changedBeforeAdded: number[][] = [];\n  const fixed: boolean[] = [];\n  const removedMap: object = {};\n  let changed: number[][] = [];\n  let addedCount = 0;\n  let removedCount = 0;\n\n  // Add prevKeys and keys to the hashmap.\n  prevKeys.forEach((key, prevListIndex) => {\n    prevKeyMap.set(key, prevListIndex);\n  });\n  keys.forEach((key, listIndex) => {\n    keyMap.set(key, listIndex);\n  });\n\n  // Compare `prevKeys` and `keys` and add them to `removed` if they are not in `keys`.\n  prevKeys.forEach((key, prevListIndex) => {\n    const listIndex = keyMap.get(key);\n\n    // In prevList, but not in list, it is removed.\n    if (typeof listIndex === \"undefined\") {\n      ++removedCount;\n      removed.push(prevListIndex);\n    } else {\n      removedMap[listIndex] = removedCount;\n    }\n  });\n\n  // Compare `prevKeys` and `keys` and add them to `added` if they are not in `prevKeys`.\n  keys.forEach((key, listIndex) => {\n    const prevListIndex = prevKeyMap.get(key);\n\n    // In list, but not in prevList, it is added.\n    if (typeof prevListIndex === \"undefined\") {\n      added.push(listIndex);\n      ++addedCount;\n    } else {\n      maintained.push([prevListIndex, listIndex]);\n      removedCount = removedMap[listIndex] || 0;\n\n      changedBeforeAdded.push([\n        prevListIndex - removedCount,\n        listIndex - addedCount,\n      ]);\n      fixed.push(listIndex === prevListIndex);\n      if (prevListIndex !== listIndex) {\n        changed.push([prevListIndex, listIndex]);\n      }\n    }\n  });\n  // Sort by ascending order of 'to(list's index).\n  removed.reverse();\n\n  return new Result(\n    prevList,\n    list,\n    added,\n    removed,\n    changed,\n    maintained,\n    changedBeforeAdded,\n    fixed,\n  );\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport { DiffResult, ListFormat } from \"./types\";\nimport { diff } from \"./utils\";\n\n/**\n * A module that checks diff when values are added, removed, or changed in an array.\n * @ko 배열 또는 오브젝트에서 값이 추가되거나 삭제되거나 순서가 변경사항을 체크하는 모듈입니다.\n * @memberof eg\n */\nclass ListDiffer<T> {\n  private list: T[];\n  /**\n   * @param - Initializing Data Array. <ko> 초기 설정할 데이터 배열.</ko>\n   * @param - This callback function returns the key of the item. <ko> 아이템의 키를 반환하는 콜백 함수입니다.</ko>\n   * @example\n   * import ListDiffer from \"@egjs/list-differ\";\n   * // script => eg.ListDiffer\n   * const differ = new ListDiffer([0, 1, 2, 3, 4, 5], e => e);\n   * const result = differ.update([7, 8, 0, 4, 3, 6, 2, 1]);\n   * // List before update\n   * // [1, 2, 3, 4, 5]\n   * console.log(result.prevList);\n   * // Updated list\n   * // [4, 3, 6, 2, 1]\n   * console.log(result.list);\n   * // Index array of values added to `list`.\n   * // [0, 1, 5]\n   * console.log(result.added);\n   * // Index array of values removed in `prevList`.\n   * // [5]\n   * console.log(result.removed);\n   * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`.\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.changed);\n   * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n   * // [[4, 3], [3, 4], [2, 6]]\n   * console.log(result.pureChanged);\n   * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n   * // [[4, 1], [4, 2], [4, 3]]\n   * console.log(result.ordered);\n   * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved.\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.maintained);\n   */\n  constructor(\n    list: ListFormat<T> = [],\n    private findKeyCallback?: (e: T, i: number, arr: T[]) => number | string,\n  ) {\n    this.list = [].slice.call(list);\n  }\n  /**\n   * Update list.\n   * @ko 리스트를 업데이트를 합니다.\n   * @param - List to update <ko> 업데이트할 리스트 </ko>\n   * @return - Returns the results of an update from `prevList` to `list`.<ko> `prevList`에서 `list`로 업데이트한 결과를 반환한다. </ko>\n   */\n  public update(list: ListFormat<T>): DiffResult<T> {\n    const newData: T[] = [].slice.call(list);\n    const result = diff<T>(this.list, newData, this.findKeyCallback);\n\n    this.list = newData;\n    return result;\n  }\n}\n\nexport default ListDiffer;\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport ListDiffer from \"./ListDiffer\";\nexport default ListDiffer;\nexport { diff } from \"./utils\";\nexport * from \"./types\";\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { PropType } from \"vue\";\nimport { FlickingOptions, Plugin, Status } from \"@egjs/flicking\";\n\nexport default {\n  viewportTag: {\n    type: String,\n    default: \"div\",\n    required: false\n  },\n  cameraTag: {\n    type: String,\n    default: \"div\",\n    required: false\n  },\n  cameraClass: {\n    type: String,\n    default: \"\",\n    required: false\n  },\n  hideBeforeInit: {\n    type: Boolean,\n    default: false,\n    required: false\n  },\n  firstPanelSize: {\n    type: String,\n    required: false\n  },\n  options: {\n    type: Object as unknown as () => Partial<FlickingOptions>,\n    default: () => ({}),\n    required: false\n  },\n  plugins: {\n    type: Array as PropType<Plugin[]>,\n    default: () => ([]),\n    required: false\n  },\n  status: {\n    type: Object as PropType<Status>,\n    required: false\n  }\n};\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport {\n  ExternalRenderer,\n  getFlickingAttached,\n  PanelOptions,\n  RendererOptions\n} from \"@egjs/flicking\";\n\nimport VueFlicking from \"./Flicking\";\nimport VuePanel from \"./VuePanel\";\n\nexport interface VueRendererOptions extends RendererOptions {\n  vueFlicking: VueFlicking;\n}\n\nclass VueRenderer extends ExternalRenderer {\n  // Internal States\n  private _vueFlicking: VueFlicking;\n\n  public constructor(options: VueRendererOptions) {\n    super(options);\n\n    this._vueFlicking = options.vueFlicking;\n  }\n\n  public async render() {\n    const flicking = getFlickingAttached(this._flicking);\n    const vueFlicking = this._vueFlicking;\n    const strategy = this._strategy;\n\n    strategy.updateRenderingPanels(flicking);\n    strategy.renderPanels(flicking);\n\n    return new Promise<void>((resolve) => {\n      vueFlicking.renderEmitter.once(\"render\", () => {\n        this._afterRender();\n        resolve();\n      });\n      vueFlicking.$forceUpdate();\n    });\n  }\n\n  public async forceRenderAllPanels() {\n    const vueFlicking = this._vueFlicking;\n\n    await super.forceRenderAllPanels();\n\n    return new Promise<void>((resolve) => {\n      vueFlicking.renderEmitter.once(\"render\", resolve);\n      vueFlicking.$forceUpdate();\n    });\n  }\n\n  protected _collectPanels() {\n    const flicking = getFlickingAttached(this._flicking);\n    const vueFlicking = this._vueFlicking;\n    const childRefs = vueFlicking.$refs;\n    const vuePanels: any[] = Object.keys(childRefs).map(refKey => childRefs[refKey]);\n\n    this._panels = this._strategy.collectPanels(flicking, vuePanels);\n  }\n\n  protected _createPanel(externalComponent: VuePanel, options: PanelOptions) {\n    return this._strategy.createPanel(externalComponent, options);\n  }\n}\n\nexport default VueRenderer;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport { defineComponent } from \"vue\";\n\nconst VuePanel = defineComponent({\n  data() {\n    return {\n      hide: false\n    };\n  },\n  render() {\n    if (this.hide || !this.$slots.default) return;\n\n    return this.$slots.default();\n  }\n});\n\ntype VuePanelType = InstanceType<typeof VuePanel>;\n\ninterface VuePanel extends VuePanelType {}\nexport default VuePanel;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { ElementProvider } from \"@egjs/flicking\";\n\nimport VuePanel from \"./VuePanel\";\n\nclass VueElementProvider implements ElementProvider {\n  private _el: VuePanel;\n  private _cachedElement: HTMLElement;\n\n  public get rendered() { return !this._el.hide; }\n  public get element() {\n    const el = this._el.$el.nextSibling as HTMLElement;\n\n    if (el && el.nodeType === Node.ELEMENT_NODE) {\n      this._cachedElement = el;\n    }\n\n    return this._cachedElement;\n  }\n\n  public constructor(el: VuePanel) {\n    this._el = el;\n  }\n\n  public show() {\n    this._el.hide = false;\n  }\n\n  public hide() {\n    this._el.hide = true;\n  }\n}\n\nexport default VueElementProvider;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { h, defineComponent, VNode, resolveComponent, Fragment, getCurrentInstance, Comment, Text } from \"vue\";\nimport ListDiffer, { DiffResult } from \"@egjs/list-differ\";\nimport Component from \"@egjs/component\";\nimport VanillaFlicking, {\n  EVENTS,\n  withFlickingMethods,\n  sync,\n  Plugin,\n  getRenderingPanels,\n  getDefaultCameraTransform,\n  range,\n  VirtualRenderingStrategy,\n  NormalRenderingStrategy\n} from \"@egjs/flicking\";\n\nimport FlickingProps from \"./FlickingProps\";\nimport VueRenderer, { VueRendererOptions } from \"./VueRenderer\";\nimport VuePanel from \"./VuePanel\";\nimport VueElementProvider from \"./VueElementProvider\";\nimport { VueFlicking } from \"./types\";\n\nconst Flicking = defineComponent({\n  props: FlickingProps,\n  components: {\n    Panel: VuePanel\n  },\n  data() {\n    return {} as {\n      renderEmitter: Component<{ render: void }>;\n      vanillaFlicking: VanillaFlicking;\n      pluginsDiffer: ListDiffer<Plugin>;\n      slotDiffer: ListDiffer<VNode>;\n      diffResult: DiffResult<VNode> | null;\n    };\n  },\n  created() {\n    this.vanillaFlicking = null;\n    this.renderEmitter = new Component();\n    this.diffResult = null;\n\n    this.getPanels = () => {\n      const componentInstance = getCurrentInstance() as unknown as { ctx: Flicking } | null;\n      const vueFlicking = componentInstance?.ctx;\n      const flicking = this.vanillaFlicking;\n      const defaultSlots = this.getSlots();\n      const diffResult = vueFlicking?.diffResult;\n\n      const slots = diffResult\n        ? getRenderingPanels(flicking, diffResult)\n        : defaultSlots;\n\n      const panelComponent = resolveComponent(\"Panel\");\n      const panels = slots.map((slot, idx) => h(panelComponent as any, {\n        key: slot.key!,\n        ref: idx.toString()\n      }, () => slot));\n\n      return panels;\n    };\n    this.getVirtualPanels = () => {\n      const options = this.options;\n      const {\n        panelClass = \"flicking-panel\"\n      } = options.virtual!;\n      const panelsPerView = options.panelsPerView as number;\n      const flicking = this.vanillaFlicking;\n      const initialized = flicking && flicking.initialized;\n\n      const renderingIndexes = initialized\n        ? flicking.renderer.strategy.getRenderingIndexesByOrder(flicking)\n        : range(panelsPerView + 1);\n\n      const firstPanel = initialized && flicking.panels[0];\n      const size = firstPanel\n        ? flicking.horizontal\n          ? { width: firstPanel.size }\n          : { height: firstPanel.size }\n        : {};\n\n      return renderingIndexes.map(idx => h(\"div\", {\n        key: idx,\n        ref: idx.toString(),\n        class: panelClass,\n        style: size,\n        \"data-element-index\": idx\n      }));\n    };\n\n    withFlickingMethods(this, \"vanillaFlicking\");\n  },\n  mounted() {\n    const options = this.options;\n    const viewportEl = this.$el as HTMLElement;\n    const rendererOptions: VueRendererOptions = {\n      vueFlicking: this,\n      align: options.align,\n      strategy: options.virtual && (options.panelsPerView ?? -1) > 0\n        ? new VirtualRenderingStrategy()\n        : new NormalRenderingStrategy({\n          providerCtor: VueElementProvider\n        })\n    };\n\n    const flicking = new VanillaFlicking(viewportEl, {\n      ...options,\n      externalRenderer: new VueRenderer(rendererOptions)\n    });\n    this.vanillaFlicking = flicking;\n\n    flicking.once(EVENTS.READY, () => {\n      this.$forceUpdate();\n    });\n\n    const slots = this.getSlots();\n    this.slotDiffer = new ListDiffer<VNode>(slots, vnode => vnode.key! as string | number);\n    this.pluginsDiffer = new ListDiffer<Plugin>();\n\n    this.bindEvents();\n    this.checkPlugins();\n\n    if (this.status) {\n      flicking.setStatus(this.status);\n    }\n  },\n  beforeUnmount() {\n    this.vanillaFlicking?.destroy();\n  },\n  beforeMount() {\n    this.fillKeys();\n  },\n  beforeUpdate() {\n    this.fillKeys();\n\n    this.diffResult = this.slotDiffer.update(this.getSlots());\n  },\n  updated() {\n    const flicking = this.vanillaFlicking;\n    const diffResult = this.diffResult;\n\n    this.checkPlugins();\n    this.renderEmitter.trigger(\"render\");\n\n    if (!diffResult || !flicking?.initialized) return;\n\n    const children = this.getChildren();\n\n    sync(flicking, diffResult, children);\n\n    if (diffResult.added.length > 0 || diffResult.removed.length > 0) {\n      this.$forceUpdate();\n    }\n\n    this.diffResult = undefined;\n  },\n  render() {\n    const flicking = this.vanillaFlicking;\n    const options = this.options;\n    const initialized = flicking && flicking.initialized;\n    const isHorizontal = flicking\n      ? flicking.horizontal\n      : this.options.horizontal ?? true;\n\n    const viewportData = {\n      class: {\n        \"flicking-viewport\": true,\n        \"vertical\": !isHorizontal,\n        \"flicking-hidden\": this.hideBeforeInit && !initialized\n      }\n    };\n    const cameraData = {\n      class: {\n        \"flicking-camera\": true,\n        [this.cameraClass]: !!this.cameraClass\n      },\n      style: !initialized && this.firstPanelSize\n        ? { transform: getDefaultCameraTransform(this.options.align, this.options.horizontal, this.firstPanelSize) }\n        : {}\n    };\n\n    const panels = options.virtual && options.panelsPerView && options.panelsPerView > 0\n      ? this.getVirtualPanels\n      : this.getPanels;\n\n    const viewportSlots = this.$slots.viewport\n      ? this.$slots.viewport()\n      : [];\n\n    return h(this.viewportTag, viewportData,\n      [h(this.cameraTag, cameraData, { default: panels }), ...viewportSlots]\n    );\n  },\n  methods: {\n    getSlots() {\n      const slots = this.$slots.default\n        ? this.$slots.default()\n        : [];\n\n      return slots\n        .reduce((elementSlots, slot) => [...elementSlots, ...this.getElementVNodes(slot)], [] as VNode[])\n        .filter(slot => slot.type !== Comment && slot.type !== Text);\n    },\n    getElementVNodes(slot: VNode, childSlots: VNode[] = []): VNode[] {\n      if (slot.type === Fragment && Array.isArray(slot.children)) {\n        slot.children\n          .filter(child => child && typeof child === \"object\")\n          .forEach(child => this.getElementVNodes(child as VNode, childSlots));\n      } else {\n        childSlots.push(slot);\n      }\n\n      return childSlots;\n    },\n    bindEvents() {\n      const flicking = this.vanillaFlicking;\n      const events = (Object.keys(EVENTS) as Array<keyof typeof EVENTS>)\n        .map(key => EVENTS[key]);\n\n      events.forEach(eventName => {\n        flicking.on(eventName, (e: any) => {\n          e.currentTarget = this;\n          // Make events from camelCase to kebab-case\n          this.$emit(eventName.replace(/([A-Z])/g, \"-$1\").toLowerCase(), e);\n        });\n      });\n    },\n    checkPlugins() {\n      const { list, added, removed, prevList } = this.pluginsDiffer.update(this.plugins);\n\n      this.vanillaFlicking!.addPlugins(...added.map(index => list[index]));\n      this.vanillaFlicking!.removePlugins(...removed.map(index => prevList[index]));\n    },\n    fillKeys() {\n      const vnodes = this.getSlots();\n\n      vnodes.forEach((node, idx) => {\n        if (node.key == null) {\n          node.key = `$_${idx}`;\n        }\n      });\n    },\n    getChildren() {\n      const childRefs = this.$refs;\n\n      return Object.keys(childRefs).map(refKey => childRefs[refKey]);\n    }\n  },\n  watch: {\n    options: {\n      handler(newOptions) {\n        const flicking = this.vanillaFlicking;\n        if (!flicking) return;\n\n        // Omit 'virtual', as it can't have any setter\n        const { virtual, ...options } = newOptions; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n        for (const key in options) {\n          if (key in flicking && flicking[key] !== options[key]) {\n            flicking[key] = options[key];\n          }\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}) as unknown as VueFlicking;\n\ninterface Flicking extends VueFlicking, VanillaFlicking {}\nexport default Flicking;\n"],
  "mappings": "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",
  "names": ["key", "values", "keys", "indexOf", "value", "prevIndex", "index", "length", "object", "SUPPORT_MAP", "Map", "prevLink", "nextLink", "prev", "next", "link", "orderChanged", "changed", "fixed", "fromLinks", "toLinks", "forEach", "_a", "from", "to", "Link", "i", "connect", "filter", "_", "map", "fromLink", "toLink", "fromIndex", "getIndex", "disconnect", "undefined", "toIndex", "prevList", "list", "added", "removed", "maintained", "changedBeforeAdded", "Object", "cacheOrdered", "caculateOrdered", "cachePureChanged", "ordered", "pureChanged", "_b", "fromBefore", "toBefore", "push", "diff", "findKeyCallback", "mapClass", "HashMap", "PolyMap", "callback", "e", "prevKeys", "prevKeyMap", "keyMap", "removedMap", "addedCount", "removedCount", "prevListIndex", "set", "listIndex", "get", "reverse", "Result", "slice", "call", "newData", "result", "viewportTag", "type", "String", "default", "required", "cameraTag", "cameraClass", "hideBeforeInit", "Boolean", "firstPanelSize", "options", "Object", "plugins", "Array", "status", "__extends", "VueRenderer", "_super", "_this", "_vueFlicking", "vueFlicking", "flicking", "getFlickingAttached", "_flicking", "strategy", "_strategy", "updateRenderingPanels", "renderPanels", "Promise", "resolve", "renderEmitter", "once", "_afterRender", "$forceUpdate", "forceRenderAllPanels", "_a", "childRefs", "$refs", "vuePanels", "keys", "map", "refKey", "_panels", "collectPanels", "externalComponent", "createPanel", "ExternalRenderer", "VuePanel", "defineComponent", "data", "hide", "render", "$slots", "VueElementProvider", "el", "_el", "$el", "nextSibling", "nodeType", "Node", "ELEMENT_NODE", "_cachedElement", "Flicking", "props", "FlickingProps", "components", "Panel", "created", "vanillaFlicking", "Component", "diffResult", "getPanels", "componentInstance", "getCurrentInstance", "ctx", "defaultSlots", "getSlots", "slots", "getRenderingPanels", "panelComponent", "resolveComponent", "panels", "slot", "idx", "h", "key", "ref", "toString", "getVirtualPanels", "virtual", "panelClass", "panelsPerView", "initialized", "renderingIndexes", "renderer", "getRenderingIndexesByOrder", "range", "firstPanel", "size", "horizontal", "width", "height", "class", "style", "withFlickingMethods", "mounted", "viewportEl", "rendererOptions", "align", "VirtualRenderingStrategy", "NormalRenderingStrategy", "providerCtor", "VanillaFlicking", "externalRenderer", "EVENTS", "READY", "slotDiffer", "ListDiffer", "vnode", "pluginsDiffer", "bindEvents", "checkPlugins", "setStatus", "beforeUnmount", "destroy", "beforeMount", "fillKeys", "beforeUpdate", "update", "updated", "trigger", "children", "getChildren", "sync", "added", "length", "removed", "undefined", "isHorizontal", "viewportData", "cameraData", "transform", "getDefaultCameraTransform", "viewportSlots", "viewport", "methods", "reduce", "elementSlots", "getElementVNodes", "filter", "Comment", "Text", "childSlots", "Fragment", "isArray", "child", "forEach", "push", "events", "eventName", "on", "e", "currentTarget", "$emit", "replace", "toLowerCase", "_c", "list", "prevList", "addPlugins", "index", "_b", "removePlugins", "vnodes", "node", "watch", "handler", "newOptions", "deep", "immediate"]
}
